// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
function e(e){if(e.__esModule)return e;var t=Object.defineProperty({},"__esModule",{value:!0});return Object.keys(e).forEach((function(r){var o=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,o.get?o:{enumerable:!0,get:function(){return e[r]}})})),t}var t="/home/runner/work/datasets-cmudict/datasets-cmudict/lib",r=require("path").resolve,o=require("@stdlib/fs-read-json").sync,n=require("@stdlib/assert-has-own-property"),a=require("./validate.js"),i=["dict","phones","symbols","vp"],s={dict:r(t,"..","data","dict.json"),phones:r(t,"..","data","phones.json"),symbols:r(t,"..","data","symbols.json"),vp:r(t,"..","data","vp.json")},d={encoding:"utf8"};module.exports=function(e){var t,r,u,f,c,l;if(arguments.length>0){if(r=a(t={},e))throw r;if(t.data){if(!n(s,t.data))throw new RangeError("invalid option. `data` option must be one of the following values: `"+i.join(",")+"`. Option: `"+t.data+"`.");if((f=o(s[t.data],d))instanceof Error)throw f;return f}}for(f={},l=0;l<i.length;l++){if(u=i[l],(c=o(s[u]))instanceof Error)throw c;f[u]=c}return f};var u=e(Object.freeze({__proto__:null}));export{u as default};
//# sourceMappingURL=mod.js.map
